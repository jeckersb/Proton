<!--
 -
 - Licensed to the Apache Software Foundation (ASF) under one
 - or more contributor license agreements.  See the NOTICE file
 - distributed with this work for additional information
 - regarding copyright ownership.  The ASF licenses this file
 - to you under the Apache License, Version 2.0 (the
 - "License"); you may not use this file except in compliance
 - with the License.  You may obtain a copy of the License at
 -
 -   http://www.apache.org/licenses/LICENSE-2.0
 -
 - Unless required by applicable law or agreed to in writing,
 - software distributed under the License is distributed on an
 - "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 - KIND, either express or implied.  See the License for the
 - specific language governing permissions and limitations
 - under the License.
 -
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.apache.qpid</groupId>
  <artifactId>tests</artifactId>
  <version>1.0-SNAPSHOT</version>

  <description><![CDATA[The Proton system tests execute against either the Java or the C implementations, based on the chosen profile.

To execute, run either "mvn test -P proton-j" or "mvn test -P proton-c".

The proton-c profile looks for the JNI jar and native libraries under directory <basedir>/proton-c/build.
To override this, run Maven like so: "mvn test -P proton-c -Dproton-c-build-dir=/path/to/build/dir".
]]>
  </description>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <optimize>true</optimize>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.qpid</groupId>
      <artifactId>proton-api</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
        <groupId>org.python</groupId>
        <artifactId>jython-standalone</artifactId>
        <version>2.5.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>proton-j</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.apache.qpid</groupId>
          <artifactId>proton-j-impl</artifactId>
          <version>1.0-SNAPSHOT</version>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>proton-c</id>
      <properties>
        <!-- Uses the JNI jar and the native libraries, neither of which are built by Maven,
             therefore their location needs to be set explicitly in the following properties. -->
        <proton-c-build-dir>${basedir}/../proton-c/build</proton-c-build-dir>
        <jni-native-path>${proton-c-build-dir}:${proton-c-build-dir}/bindings/java</jni-native-path>
        <jni-jar>${proton-c-build-dir}/bindings/java/proton-jni.jar</jni-jar>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <forkMode>once</forkMode>
              <argLine>-Djava.library.path=${jni-native-path}</argLine>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>org.apache.qpid</groupId>
          <artifactId>proton-jni</artifactId>
          <version>${project.parent.version}</version>
          <scope>system</scope>
          <systemPath>${jni-jar}</systemPath>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

  <parent>
    <groupId>org.apache</groupId>
    <artifactId>apache</artifactId>
    <version>12</version>
  </parent>
</project>
